-------------------------------------------------------------------
---
--- FriCAS QEta
--- Copyright (C) 2018  Ralf Hemmecke <ralf@hemmecke.org>
---
-------------------------------------------------------------------
-- This program is free software: you can redistribute it and/or modify
-- it under the terms of the GNU General Public License as published by
-- the Free Software Foundation, either version 3 of the License, or
-- (at your option) any later version.
--
-- This program is distributed in the hope that it will be useful,
-- but WITHOUT ANY WARRANTY; without even the implied warranty of
-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-- GNU General Public License for more details.
--
-- You should have received a copy of the GNU General Public License
-- along with this program.  If not, see <http://www.gnu.org/licenses/>.
-------------------------------------------------------------------

)if LiterateDoc
\documentclass{article}
\usepackage{qeta}
% Euler totient function
\newcommand{\eulerphi}{\varphi}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\begin{document}
\title{Expanding Dedekind Eta Functions into $q$-series}
\author{Ralf Hemmecke}
\date{26-Jan-2018}
\maketitle
\begin{abstract}

We expand quotients of Dedekind $\eta$-functions that are modular
functions for $\Gamma_0(N)$ at all cusps into $q$-series.

\end{abstract}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\tableofcontents

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\section{Overview}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Let $N$ be a positive natural number and define a $\Gamma_0(N)$ as a
subgroup of the special linear group $SL_2(\setZ)$ as follows.
\begin{gather*}
\Gamma_0(N) := \SetDef{  \begin{pmatrix}
    a & b\\
    c & d
  \end{pmatrix} \in SL_2(\setZ)}{N|c}
\end{gather*}

According to
\cite[Lemma~5.3]{Radu:AlgebraicRelationsInvolvingEtaQuotients:2016},
there are $\eulerphi(\gcd(N/c, c))$ different cusps $\frac{a}{c}$ of
$\Gamma_0(N)$ that correspond to a divisor $c$ of $N$.

In the following we always deal with quotients of $\eta$-functions of
level $N$ that are modular functions for $\Gamma_0(N)$.

We implement a domain that deals with such quotients and their
$q$-expansion at all cusps ($q=e^{2\pi i \tau})$.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\section{Dedekind $\eta$-function}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Let $\setH=\SetDef{c\in \setC}{\Im(c)>0}$ denote the upper complex
half-plane.

Let
\begin{gather*}
  \eta: \setH \to \setC, \quad
  \tau \mapsto \exp
  \left({\frac{\pi i\tau}{12}}\right)
  \prod_{n=1}^{\infty}(1-q^n)
  \text{ with $q = q(\tau) = \exp({2\pi i\tau})$}
\end{gather*}
denote the Dedekind eta function.

In the following $N$ denotes a positive integer and
$1=\delta_1<\delta_2\dots<\delta_n=N$ the positive divisors of $N$.
Let $\Delta:=\Set{\delta_1,\ldots,\delta_n}$. For convenience, we
allow to index $n$-dimensional vectors by the divisors of $N$,
instead of the usual index set $\Set{1,\ldots,n}$.
%
For $\delta\in\Delta$ we consider the functions
\begin{gather*}
 \eta_\delta: \setH \to \setC,\quad \tau \mapsto  \eta(\delta\tau)
\end{gather*}
None of these functions is identically zero.



Let's look at the transformation of the $\eta$-function (see
\cite[Lemma~2.27]{Radu:PhD:2010}.

Let $\gamma=\left(\begin{smallmatrix}a&b\\c&d\end{smallmatrix}\right) \in
SL_2(\setZ)$, then

\begin{gather*}
\eta(\gamma\tau) =
\eta\left(\frac{a\tau+b}{c\tau+d}\right) =
\upsilon_\eta(a,b,c,d)(c\tau+d)^{1/2}\eta(\tau)
\end{gather*}

Let $\delta \in \setN\setminus\Set{0}$.

\begin{gather*}
\eta_\delta(\gamma\tau)
=
\eta_\delta\left(\frac{a\tau+b}{c\tau+d}\right) =
\eta\left(\frac{a\delta\tau+b\delta}{c\tau+d}\right)
=
\eta\left(\begin{pmatrix}a\delta&b\delta\\c&d\end{pmatrix}
  \tau\right).
\end{gather*}

Let
%
$g_\delta:=\gcd(\delta a,c)$,
%
$a_\delta:=\frac{\delta a}{g_\delta}$,
%
$c_\delta:=\frac{c}{g_\delta}$,
%
and $b_\delta$ and $d_\delta$ are chosen in such a way that
$a_\delta d_\delta - b_\delta c_\delta = 1$.
%
Because of $\gcd(a_\delta, c_\delta)=1$, such $b_\delta$ and $d_\delta$
can be found.
%
Therefore
$\left(
  \begin{smallmatrix}a_\delta&b_\delta\\c_\delta&d_\delta\end{smallmatrix}
\right)\in SL_2(\setZ)$.

Note that

\begin{align*}
\begin{pmatrix}a\delta&b\delta\\c&d\end{pmatrix}
&=\begin{pmatrix}a_\delta&b_\delta\\c_\delta&d_\delta\end{pmatrix}
  \begin{pmatrix}g_\delta&\delta b d_\delta-d b_\delta\\
                 0      &\delta / g_\delta\end{pmatrix}.
\end{align*}

If we set
\begin{gather*}
  \tau_\delta:=\begin{pmatrix}g_\delta&\delta b d_\delta-d b_\delta\\0&\delta
    / g_\delta\end{pmatrix} \tau
  = \frac{g_\delta\tau+\delta b d_\delta-d b_\delta}{\delta/g_\delta},
\end{gather*}
then
\begin{align*}
\eta_\delta(\gamma\tau)
  &=
    \eta\left(\begin{pmatrix}a_\delta&b_\delta\\c_\delta&d_\delta\end{pmatrix}
    \tau_\delta\right)\\
  &=
    \upsilon_\eta(a_\delta,b_\delta,c_\delta,d_\delta)
    \,
    (c_\delta\tau_\delta+d_\delta)^{1/2}
    \,
    \eta(\tau_\delta).
\end{align*}

Furthermore,
\begin{align*}
  c_\delta\tau_\delta+d_\delta
  &=
  c_\delta
    \left(
    \frac{g_\delta\tau+\delta b d_\delta-d b_\delta}{\delta/g_\delta}
    \right) + d_\delta\\
  &=
  \frac{c_\delta g_\delta}{\delta}
    (
    g_\delta\tau + b \delta d_\delta-d b_\delta
    ) + d_\delta\\
  &=
  \frac{1}{\delta}
    (c g_\delta\tau + c b \delta d_\delta - c d b_\delta + \delta d_\delta)\\
  &=
  \frac{1}{\delta}
    (c g_\delta\tau + (ad-1) \delta d_\delta - c d b_\delta + \delta d_\delta)\\
  &=
  \frac{1}{\delta}
    (c g_\delta\tau + ad \delta d_\delta - c d b_\delta)\\
  &=
  \frac{1}{\delta}
    (c g_\delta\tau + d g_\delta (a_\delta d_\delta - c_\delta b_\delta)\\
  &=
  \frac{g_\delta}{\delta}(c \tau + d).
\end{align*}

Thus, we have
\begin{align*}
\eta_\delta(\gamma\tau)
  &=
    \upsilon_\eta(a_\delta,b_\delta,c_\delta,d_\delta)
    \,
    \left(\frac{g_\delta}{\delta}(c \tau+d)\right)^{1/2}
    \,
    \eta(\tau_\delta).
\end{align*}




%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\section{Implementation}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Let us start with a few common macros.

These two technical macros are necessary to distinguish between Rep
and \%.
)endif

rep x ==> (x@%) pretend Rep
per x ==> (x@Rep) pretend %

)if LiterateDoc
Now some abbreviations for common domains.
)endif

P ==> PositiveInteger
N ==> NonNegativeInteger
Z ==> Integer
Q ==> Fraction Z
MZ ==> SquareMatrix(2, Z)
LSym ==> List Symbol
OF ==> OutputForm

)abbrev domain METAQUOT ModularEtaQuotient
ModularEtaQuotient(C: IntegralDomain, L: UnivariateLaurentSeriesCategory C): _
  Join(CoercibleTo OutputForm) with
    eta: P -> %
      ++ eta(n) returns q^(n/24)*\prod_{k=1}^\infty (1-q^{kn}).
  == add
    Rep ==> Z -- TODO: Find the right representation
    eta(n: P): % == per(n::Rep)
    coerce(x: %): OutputForm == rep(x)::OutputForm


)if LiterateDoc
\bibliography{qeta}
\end{document}
)endif
