-------------------------------------------------------------------
---
--- FriCAS QEta
--- Copyright (C) 2015-2018  Ralf Hemmecke <ralf@hemmecke.org>
---
-------------------------------------------------------------------
-- This program is free software: you can redistribute it and/or modify
-- it under the terms of the GNU General Public License as published by
-- the Free Software Foundation, either version 3 of the License, or
-- (at your option) any later version.
--
-- This program is distributed in the hope that it will be useful,
-- but WITHOUT ANY WARRANTY; without even the implied warranty of
-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-- GNU General Public License for more details.
--
-- You should have received a copy of the GNU General Public License
-- along with this program.  If not, see <http://www.gnu.org/licenses/>.
-------------------------------------------------------------------

)if LiterateDoc
\documentclass{article}
\usepackage{qeta}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\begin{document}
\title{Homogeneous direct product with a block order of three degrevlex
  sorting ranges}
\author{Ralf Hemmecke}
\date{03-Aug-2017}
\maketitle
\begin{abstract}
  Implements a direct product domain with three block of degrevlex
  ordering. The helper domain \code{Split3HomogeneousDirectProduct} is
  used for the variants of computation of $\eta$-relations given
  through the files \PathName{qetair.spad} and \PathName{qetais.spad}.
\end{abstract}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\tableofcontents

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\section{Implementation}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

These two technical macros are necessary to distinguish between Rep
and \%.
)endif

rep x ==> (x@%) pretend Rep
per x ==> (x@Rep) pretend %

)if LiterateDoc
Now some abbreviations for common domains.
)endif

P ==> PositiveInteger
N ==> NonNegativeInteger
Z ==> Integer
LSym ==> List Symbol

)if LiterateDoc
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\section{For the elimination of two sets of variables}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

The domain \texttt{Split3HomogeneousDirectProduct} is intended to
separate the $M$, $Y$, and $E$ variables by imposing an elimination order
on these variables. First eliminate the $M_i$ then the $Y_i$.
)endif

)abbrev domain S3HDP Split3HomogeneousDirectProduct
Split3HomogeneousDirectProduct(dimtot, dim1, dim2, S) : T == C where
   dim1, dim2, dimtot: N
   S: OrderedAbelianMonoidSup

   T == DirectProductCategory(dimtot, S)
   C == DirectProduct(dimtot, S) add
        Rep := Vector(S)
        lessThanRlex(v1: %, v2: %, low: N, high: N): Boolean ==
        -- reverse lexicographical ordering
          n1: S := 0
          n2: S := 0
          for i in low..high repeat
            n1 := n1+qelt(v1, i)
            n2 := n2+qelt(v2, i)
          n1<n2 => true
          n2<n1 => false
          for i in high..low by -1 repeat
            if qelt(v2, i) < qelt(v1, i) then return true
            if qelt(v1, i) < qelt(v2, i) then return false
          false

        ((v1: %) < (v2: %)): Boolean ==
          lessThanRlex(v1, v2, 1, dim1) => true
          for i in 1..dim1 repeat
                if qelt(v1, i) ~= qelt(v2, i) then return false
          lessThanRlex(v1, v2, dim1+1, dim1+dim2) => true
          for i in dim1+1..dim1+dim2 repeat
                if qelt(v1, i) ~= qelt(v2, i) then return false
          lessThanRlex(v1, v2, dim1+dim2+1, dimtot)

)if LiterateDoc
\bibliography{qeta}
\end{document}
)endif
