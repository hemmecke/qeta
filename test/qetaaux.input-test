-- -*- coding: utf-8 -*-
-- Via jupytext this file can be shown as a jupyter notebook.

)read /home/hemmecke/g/qeta/input/jfricas-test-support.input

--setup
u ==> upsilonExponent $ QETAAUX
rsr ==> rationalSquareRoot $ QETAAUX
--endsetup


--test:upsilon
assertEquals(u(1,0,0,1), 0)
assertEquals(u(-1,0,0,-1), 6) -- compensate for the (c\tau+d)^(1/2) factor
assertEquals(u(1,1,0,1), 1) -- t +-> t+1
assertEquals(u(0,-1,1,0), 21) -- t +-> - 1/t
--endtest

--test:rationalSquareRoot
RQP ==> Record(rat: Q, rootOf: P)
chkrsr x ==> (z: RQP := rsr x; assertEquals(x, (z.rat)^2*z.rootOf))
chkrsr 1
chkrsr 16
chkrsr(1/16)
chkrsr(9/16)
chkrsr(7*6^2/(5^3*11^2))
--endtest

--test:primePower
pp(a,p,e) ==> assertEquals(primePower(a, p), e)
pp(5, 3, 0)
pp(6, 3, 1)
pp(12, 3, 1)
pp(9, 3, 2)
pp(12, 2, 2)
pp(36, 5, 0)
pp(72, 2, 3)
pp(72, 3, 2)
--endtest

--test:lengthOfGeneralizedEtaQuotientSpecification
l := [lengthOfGeneralizedEtaQuotientSpecification nn for nn in 1..50];
expected := [1,2,3,4,4,7,5,8,8,10,7,15,8,13,14,16,10,21,11,22,_
             18,19,13,31,17,22,22,29,16,38,17,32,26,28,26,47,20,31,30,46,_
             22,50,23,43,42,37,25,63,30,48]
assertEquals(l, expected)
--endtest

--test:toEtaQuotientSpecification
expected := [_
  [[1]],_
  [[1],[2]],_
  [[1],[3],[3,1]],_
  [[1],[2],[4],[4,1]],_
  [[1],[5],[5,1],[5,2]],_
  [[1],[2],[3],[6],[3,1],[6,1],[6,2]],_
  [[1],[7],[7,1],[7,2],[7,3]],_
  [[1],[2],[4],[8],[4,1],[8,1],[8,2],[8,3]],_
  [[1],[3],[9],[3,1],[9,1],[9,2],[9,3],[9,4]],_
  [[1],[2],[5],[10],[5,1],[5,2],[10,1],[10,2],[10,3],[10,4]],_
  [[1],[11],[11,1],[11,2],[11,3],[11,4],[11,5]],_
  [[1],[2],[3],[4],[6],[12],[3,1],[4,1],[6,1],[6,2],_
   [12,1],[12,2],[12,3],[12,4],[12,5]],_
  [[1],[13],[13,1],[13,2],[13,3],[13,4],[13,5],[13,6]],_
  [[1],[2],[7],[14],[7,1],[7,2],[7,3],_
   [14,1],[14,2],[14,3],[14,4],[14,5],[14,6]],_
  [[1],[3],[5],[15],[3,1],[5,1],[5,2],_
   [15,1],[15,2],[15,3],[15,4],[15,5],[15,6],[15,7]],_
  [[1],[2],[4],[8],[16],[4,1],[8,1],[8,2],[8,3],_
   [16,1],[16,2],[16,3],[16,4],[16,5],[16,6],[16,7]],_
  [[1],[17],[17,1],[17,2],[17,3],[17,4],[17,5],[17,6],[17,7],[17,8]],_
  [[1],[2],[3],[6],[9],[18],[3,1],[6,1],[6,2],[9,1],[9,2],[9,3],[9,4],_
   [18,1],[18,2],[18,3],[18,4],[18,5],[18,6],[18,7],[18,8]],_
  [[1],[19],[19,1],[19,2],[19,3],[19,4],[19,5],[19,6],[19,7],[19,8],[19,9]],_
  [[1],[2],[4],[5],[10],[20],[4,1],[5,1],[5,2],[10,1],[10,2],[10,3],[10,4],_
  [20,1],[20,2],[20,3],[20,4],[20,5],[20,6],[20,7],[20,8],[20,9]]]

s := [toEtaQuotientSpecification(nn,[]) for nn in 1..20]
assertEquals(s, expected)
l := [lengthOfGeneralizedEtaQuotientSpecification nn for nn in 1..20];
assertEquals([#x for x in s], l)
--endtest
