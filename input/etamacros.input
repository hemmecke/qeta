OF==>OutputForm
dbgPrint(x,y) ==> display(([x::OF, y::OF]$List(OF)::OF)::LinearOutputFormat, 77)
vPrint(x,y)==>display(hconcat([x::Symbol::OF, ":="::Symbol::OF, y::OF]$List(OF))::LinearOutputFormat,77)

Z ==> Integer
Q ==> Fraction Z
C ==> Z

PolZ ==> Polynomial Z
PolQ ==> Polynomial Q
Pol  ==> Polynomial C

LPolZ ==> List PolZ
LPolQ ==> List PolQ
LPol  ==> List Pol

LSym ==> List Symbol

LZ ==> Finite0Series(Z, 'q, 0) -- M^{\infty}(N)
LQ ==> Finite0Series(Q, 'q, 0) -- M^{\infty}(N)
L  ==> Finite0Series(C, 'q, 0) -- M^{\infty}(N)

ETAZ ==> EtaQuotient(Z, LZ)
ETAQ ==> EtaQuotient(Q, LQ)
ETA  ==> EtaQuotient(C, L)

QEQMEV ==> QEtaQuotientMonoidExponentVectors

QEIZ ==> QEtaIdeal(Z, LZ)
QEIQ ==> QEtaIdeal(Q, LQ)
QEI  ==> QEtaIdeal(C, L)
QEtaIdeal ==> QEtaIdealHemmecke

QEARZ ==> QEtaAuxiliaryRelations(Z)
QEARQ ==> QEtaAuxiliaryRelations(Q)
QEAR  ==> QEtaAuxiliaryRelations(C)

N ==> NonNegativeInteger
E ==> Monomials(dim, D, syms)
R ==> PolynomialRing(C, E)
PC ==> PolynomialConversion(C, E, syms)
P ==> PositiveInteger

QEG(X) ==> QEtaGroebner(C, X)

xetaQuotientMonoidExponentVectors ==> etaQuotientMonoidExponentVectors $ QEQMEV
xetaQuotientIdealGenerators ==> etaQuotientIdealGenerators $ QEI
xetaLaurentIdealGenerators ==> etaLaurentIdealGenerators $ QEI
xetaRelations ==> etaRelations $ QEI

eqmev ==> xetaQuotientMonoidExponentVectors
eqg ==> xetaQuotientIdealGenerators
elg ==> xetaLaurentIdealGenerators
er ==> xetaRelations

toeta ==> toEta $ ETA
